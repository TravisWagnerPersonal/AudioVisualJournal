name: Deploy AudioPhotoJournal to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js (if needed for any build steps)
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Verify build files
        run: |
          echo "📁 Checking project structure..."
          ls -la
          echo "📄 Checking main files..."
          test -f index.html || (echo "❌ index.html not found!" && exit 1)
          test -f app.js || (echo "❌ app.js not found!" && exit 1)
          test -f styles.css || (echo "❌ styles.css not found!" && exit 1)
          test -f manifest.json || (echo "❌ manifest.json not found!" && exit 1)
          echo "✅ All critical files found!"
          
      - name: Create artifact
        run: |
          echo "📦 Creating deployment artifact..."
          # Create a clean directory for deployment
          mkdir -p _site
          
          # Copy all necessary files
          cp index.html _site/
          cp *.js _site/ 2>/dev/null || true
          cp *.css _site/ 2>/dev/null || true  
          cp *.json _site/ 2>/dev/null || true
          cp *.png _site/ 2>/dev/null || true
          cp -r icons _site/ 2>/dev/null || true
          
          # List what's being deployed
          echo "📋 Files being deployed:"
          ls -la _site/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        
      - name: Deployment Summary
        run: |
          echo "🎉 AudioPhotoJournal successfully deployed!"
          echo "🌐 Live URL: ${{ steps.deployment.outputs.page_url }}"
          echo "📱 Your PWA is now available online!" 