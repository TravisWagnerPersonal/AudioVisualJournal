name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skip runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Build site
        run: |
          echo "📁 Creating build directory..."
          mkdir -p _site
          
          echo "📄 Copying core files..."
          cp index.html _site/
          cp *.js _site/ 2>/dev/null || echo "No JS files found"
          cp *.css _site/ 2>/dev/null || echo "No CSS files found"
          cp *.json _site/ 2>/dev/null || echo "No JSON files found"
          cp *.png _site/ 2>/dev/null || echo "No PNG files found"
          
          echo "🖼️ Copying icons directory..."
          if [ -d "icons" ]; then
            cp -r icons _site/
            echo "✅ Icons copied successfully"
          else
            echo "⚠️ No icons directory found"
          fi
          
          echo "🧹 Cleaning up unwanted files..."
          rm -f _site/launch.sh _site/debug.html _site/demo.html 2>/dev/null || true
          
          echo "✅ Build complete! Contents:"
          ls -la _site/
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './_site'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 